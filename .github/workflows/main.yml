name: Build and Analyze
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build project
        run: npm run build
      
      # - name: Run tests with coverage
      #   run: yarn test --coverage
      
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # - name: Download coverage artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: coverage
      #     path: coverage
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=rahulb15_k-frontend
            -Dsonar.projectName=k-frontend
            -Dsonar.organization=rahulb15
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
            -Dsonar.exclusions=node_modules/**,dist/**
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.eslint.eslintconfigpath=./.eslintrc
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarcloud]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kryptomerch:latest